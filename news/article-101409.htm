<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clash-meta.github.io/news/article-101409.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>kafka系列SpringBoot 中使用@KafkaListener详解与使用</title>
        <meta name="description" content="说明 从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些属性将覆盖在使用者工厂中配置的具有相同名称的所有属性。您不能通过这种方式指定group.id和client.id属性。他们将被" />
        <link rel="icon" href="/assets/website/img/clash_meta/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Meta免费节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clash-meta.github.io/news/article-101409.htm" />
    <meta property="og:site_name" content="Clash Meta免费节点订阅站" />
    <meta property="og:title" content="kafka系列SpringBoot 中使用@KafkaListener详解与使用" />
    <meta property="og:image" content="https://clash-meta.github.io/uploads/20240803-1/1a6501d886cfe8cb980be10e0675e6a4.webp" />
        <meta property="og:release_date" content="2025-04-22T08:23:05" />
    <meta property="og:updated_time" content="2025-04-22T08:23:05" />
        <meta property="og:description" content="说明 从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些属性将覆盖在使用者工厂中配置的具有相同名称的所有属性。您不能通过这种方式指定group.id和client.id属性。他们将被" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="kafka系列SpringBoot 中使用@KafkaListener详解与使用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="//fonts.googleapis.com/css2?family=Jost:wght@300;400;500&display=swap" rel="stylesheet">
    <link href="//fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/clash_meta/style-starter.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SJF0YS0LDW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SJF0YS0LDW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke px-0 pt-lg-0">
                                <a class="navbar-brand" href="/">
                    Clash Meta                </a>
                                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav mx-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--/header-->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb">
        <div class="breadcrumb-bg breadcrumb-bg-about py-5">
            <div class="container pt-lg-5 pt-md-3 p-lg-4 pb-md-3 my-lg-5">
                <h1 class="title pt-5">kafka系列SpringBoot 中使用@KafkaListener详解与使用</h1>
                <ul class="breadcrumbs-custom-path mt-3 text-center">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <section class="w3l-homeblock1">
        <div class="midd-w3 py-5">
            <div class="container py-lg-5 py-md-4 py-2">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>说明<br /> 从2.2.4版开始，您可以直接在注释上指定Kafka使用者属性，这些属性将覆盖在使用者工厂中配置的具有相同名称的所有属性。您不能通过这种方式指定group.id和client.id属性。他们将被忽略；</p> <p>可以使用#{…}或属性占位符（${…}）在SpEL上配置注释上的大多数属性。<br /> 比如:</p> <pre><code>@KafkaListener(id = "consumer-id",topics = "SHI_TOPIC1",concurrency = "${listen.concurrency:3}",             clientIdPrefix = "myClientId")</code></pre> <p>对于spring.kafka.listener.concurrency=3这个参数来说，它设置的是每个@KafkaListener的并发个数。每添加一个@KafkaListener, spring-kafka都会启动concurrency条Consumer线程来监听这些topic(注解可以指定监听多个topic), 当enable-auto-commit设为true时会直接在当前线程，即kafka consumer所在线程调用我们的@KafkaListener方法，如果设为false，则是将消息投放到阻塞队列中，另一边由Listener线程取出执行，有源码为证：</p> <p>所以，当concurrency=3，自动提交设置为false时，如果你程序里有两个方法标记了@KafkaListener，那么此时会启动 2 * 3 = 6 个Consumer线程，6个Listener线程。<br /> 这个信息在排查错误的时候非常重要，但官方文档居然没怎么提线程的事(不够详细)，只是在介绍KafkaContainerListener。特此记录</p> <h2>@KafkaListener详解</h2> <h3><a name="t2" rel="nofollow"></a><a id="id__id_16" rel="nofollow"></a>id 监听器的id</h3> <p><a id="__17" rel="nofollow"></a>①. 消费者线程命名规则</p> <p>填写:</p> <p>2020-11-19 14:24:15 c.d.b.k.KafkaListeners 120 [INFO] 线程:Thread[consumer-id5-1-C-1,5,main]-groupId:BASE-DEMO consumer-id5 消费</p> <p>没有填写ID:</p> <p>2020-11-19 10:41:26 c.d.b.k.KafkaListeners 137 [INFO] 线程:Thread[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1,5,main] consumer-id7</p> <p>②.在相同容器中的监听器ID不能重复</p> <p>否则会报错</p> <pre><code>Caused by: java.lang.IllegalStateException: Another endpoint is already registered with id</code></pre> <p>③.会覆盖消费者工厂的消费组GroupId<br /> 假如配置文件属性配置了消费组kafka.consumer.group-id=BASE-DEMO<br /> 正常情况它是该容器中的默认消费组<br /> 但是如果设置了 @KafkaListener(id = "consumer-id7", topics = {"SHI_TOPIC3"})<br /> 那么当前消费者的消费组就是consumer-id7 ;</p> <p>当然如果你不想要他作为groupId的话 可以设置属性idIsGroup = false;那么还是会使用默认的GroupId;</p> <p>④. 如果配置了属性groupId,则其优先级最高<br /> &nbsp;@KafkaListener(id = "consumer-id5",idIsGroup = false,topics = "SHI_TOPIC3",groupId = "groupId-test")</p> <p> 例如上面代码中最终这个消费者的消费组GroupId是 “groupId-test”</p> <p>该id属性（如果存在）将用作Kafka消费者group.id属性,并覆盖消费者工厂中的已配置属性（如果存在）您还可以groupId显式设置或将其设置idIsGroup为false，以恢复使用使用者工厂的先前行为group.id。</p> <p>topicPattern 匹配Topic进行监听(与topics、topicPartitions 三选一)<br /> topicPartitions 显式分区分配<br /> 可以为监听器配置明确的主题和分区（以及可选的初始偏移量）</p> <pre><code>@KafkaListener(id = "thing2", topicPartitions = &nbsp; &nbsp; &nbsp; &nbsp; { @TopicPartition(topic = "topic1", partitions = { "0", "1" }), &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @TopicPartition(topic = "topic2", partitions = "0", &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;partitionOffsets = @PartitionOffset(partition = "1", initialOffset = "100")) &nbsp; &nbsp; &nbsp; &nbsp; }) public void listen(ConsumerRecord&lt;?, ?&gt; record) { &nbsp; &nbsp; ... }</code></pre> <p> 上面例子意思是 监听topic1的0,1分区；监听topic2的第0分区,并且第1分区从offset为100的开始消费;</p> <h3>errorHandler 异常处理</h3> <p>实现<code>KafkaListenerErrorHandler</code>; 然后做一些异常处理;</p> <pre><code>@Component public class KafkaDefaultListenerErrorHandler implements KafkaListenerErrorHandler {     @Override     public Object handleError(Message&lt;?&gt; message, ListenerExecutionFailedException exception) {         return null;     }      @Override     public Object handleError(Message&lt;?&gt; message, ListenerExecutionFailedException exception, Consumer&lt;?, ?&gt; consumer) {     	//do someting         return null;     } }</code></pre> <p>调用的时候 填写beanName;例如<code>errorHandler="kafkaDefaultListenerErrorHandler"</code></p> <h3>containerFactory 监听器工厂</h3> <blockquote> <p>指定生成监听器的工厂类;</p> </blockquote> <p>例如我写一个 批量消费的工厂类</p> <pre><code>    /**      * 监听器工厂 批量消费      * @return      */     @Bean     public KafkaListenerContainerFactory&lt;ConcurrentMessageListenerContainer&lt;Integer, String&gt;&gt; batchFactory() {         ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; factory =                 new ConcurrentKafkaListenerContainerFactory&lt;&gt;();         factory.setConsumerFactory(kafkaConsumerFactory());         //设置为批量消费，每个批次数量在Kafka配置参数中设置ConsumerConfig.MAX_POLL_RECORDS_CONFIG         factory.setBatchListener(true);         return factory;     }</code></pre> <p>使用<code>containerFactory = "batchFactory"</code></p> <h3>clientIdPrefix 客户端前缀</h3> <blockquote> <p>会覆盖消费者工厂的<code>kafka.consumer.client-id</code>属性; 最为前缀后面接<code>-n</code>&nbsp;n是数字</p> </blockquote> <h3>concurrency并发数</h3> <p>会覆盖消费者工厂中的concurrency ,这里的并发数就是多线程消费; 比如说单机情况下,你设置了3; 相当于就是启动了3个客户端来分配消费分区;分布式情况 总线程数=concurrency*机器数量; 并不是设置越多越好,具体如何设置请看 属性concurrency的作用及配置(RoundRobinAssignor 、RangeAssignor)</p> <pre><code>    /**      * 监听器工厂       * @return      */     @Bean     public KafkaListenerContainerFactory&lt;ConcurrentMessageListenerContainer&lt;Integer, String&gt;&gt; concurrencyFactory() {         ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; factory =                 new ConcurrentKafkaListenerContainerFactory&lt;&gt;();         factory.setConsumerFactory(kafkaConsumerFactory());         factory.setConcurrency(6);         return factory;     }</code></pre> <pre><code>&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; @KafkaListener(id = "consumer-id5",idIsGroup = false,topics = "SHI_TOPIC3", containerFactory = "concurrencyFactory",concurrency = "1)</code></pre> <p> 虽然使用的工厂是concurrencyFactory(concurrency配置了6); 但是他最终生成的监听器数量 是1;</p> <h3>properties 配置其他属性</h3> <p>kafka中的属性看<code>org.apache.kafka.clients.consumer.ConsumerConfig</code>&nbsp;;<br /> 同名的都可以修改掉;</p> <p>用法</p> <pre><code>    @KafkaListener(id = "consumer-id5",idIsGroup = false,topics = "SHI_TOPIC3", containerFactory = "concurrencyFactory",concurrency = "1"             , clientIdPrefix = "myClientId5",groupId = "groupId-test",             properties = {                     "enable.auto.commit:false","max.poll.interval.ms:6000" },errorHandler="kafkaDefaultListenerErrorHandler")</code></pre> <h2>@KafkaListener使用</h2> <h2><a name="t13" rel="nofollow"></a><a id="KafkaListenerEndpointRegistry_159" rel="nofollow"></a>KafkaListenerEndpointRegistry</h2> <pre><code>    @Autowired     private KafkaListenerEndpointRegistry registry;        //.... 获取所有注册的监听器         registry.getAllListenerContainers();</code></pre> <h3>设置入参验证器</h3> <p><strong>当您将Spring Boot与验证启动器一起使用时，将LocalValidatorFactoryBean自动配置：如下</strong></p> <pre><code>@Configuration @EnableKafka public class Config implements KafkaListenerConfigurer {  &nbsp; &nbsp; @Autowired &nbsp; &nbsp; private LocalValidatorFactoryBean validator; &nbsp; &nbsp; ...  &nbsp; &nbsp; @Override &nbsp; &nbsp; public void configureKafkaListeners(KafkaListenerEndpointRegistrar registrar) { &nbsp; &nbsp; &nbsp; registrar.setValidator(this.validator); &nbsp; &nbsp; } }</code></pre> <p><strong>使用</strong></p> <pre><code>@KafkaListener(id="validated", topics = "annotated35", errorHandler = "validationErrorHandler", &nbsp; &nbsp; &nbsp; containerFactory = "kafkaJsonListenerContainerFactory") public void validatedListener(@Payload @Valid ValidatedClass val) { &nbsp; &nbsp; ... }  @Bean public KafkaListenerErrorHandler validationErrorHandler() { &nbsp; &nbsp; return (m, e) -&gt; { &nbsp; &nbsp; &nbsp; &nbsp; ... &nbsp; &nbsp; }; }</code></pre> <p></p> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-101408.htm">access update语句执行_用pymysql实现对多行数据的insert和update加速</a></p>
                                        <p>下一个：<a href="/news/article-102178.htm">上海宠物医院24小时电话多少（上海宠物医院24小时电话多少啊）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-93921.htm" title="兽用疫苗批发网（兽用疫苗排行榜前十名是哪几个企业）">兽用疫苗批发网（兽用疫苗排行榜前十名是哪几个企业）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-16-clash-meta-github.htm" title="4月16日 | Clash Meta每天更新19.2M/S免费节点订阅链接地址">4月16日 | Clash Meta每天更新19.2M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-101408.htm" title="access update语句执行_用pymysql实现对多行数据的insert和update加速">access update语句执行_用pymysql实现对多行数据的insert和update加速</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-18-free-node-subscribe.htm" title="3月18日 | Clash Meta每天更新20.9M/S免费节点订阅链接地址">3月18日 | Clash Meta每天更新20.9M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-11-clash-meta-node-share.htm" title="4月11日 | Clash Meta每天更新20.9M/S免费节点订阅链接地址">4月11日 | Clash Meta每天更新20.9M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-86680.htm" title="win11系统找不到记事本如何解决">win11系统找不到记事本如何解决</a></li>
                        <li class="py-2"><a href="/news/article-96317.htm" title="猫的疫苗三针隔多久打第二针疫苗（猫打疫苗三针间隔时间）">猫的疫苗三针隔多久打第二针疫苗（猫打疫苗三针间隔时间）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-27-today-clash-meta-node.htm" title="3月27日 | Clash Meta每天更新19M/S免费节点订阅链接地址">3月27日 | Clash Meta每天更新19M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-85258.htm" title="动物疫苗的生产原料有哪些种类 动物疫苗的生产原料有哪些种类呢">动物疫苗的生产原料有哪些种类 动物疫苗的生产原料有哪些种类呢</a></li>
                        <li class="py-2"><a href="/news/article-88872.htm" title="动物疫苗市场占有率排行榜前十（全国动物用疫苗销量排行）">动物疫苗市场占有率排行榜前十（全国动物用疫苗销量排行）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">70</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
        <!-- footer -->
    <section class="w3l-footer-29-main">
        <!-- copyright -->
        <section class="w3l-copyright text-center">
            <div class="container">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                <p class="copy-footer-29">
                Clash Meta免费节点订阅站 版权所有 Powered by WordPress
                </p>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                &#10548;
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- /move top -->
        </section>
        <!-- //copyright -->
    </section>
    <!-- //footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clash_meta/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clash_meta/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <script src="/assets/website/js/frontend/clash_meta/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clash_meta/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>