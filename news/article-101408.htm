<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clash-meta.github.io/news/article-101408.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>access update语句执行_用pymysql实现对多行数据的insert和update加速</title>
        <meta name="description" content="本文对pymysql操作MySQL，insert和update的速度优化测试对比。对于insert操作来说，“一个事务处理多行的方式”比“一个事务处理一行的方式”插入相同的数据快了313倍，即插入20" />
        <link rel="icon" href="/assets/website/img/clash_meta/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Meta免费节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clash-meta.github.io/news/article-101408.htm" />
    <meta property="og:site_name" content="Clash Meta免费节点订阅站" />
    <meta property="og:title" content="access update语句执行_用pymysql实现对多行数据的insert和update加速" />
    <meta property="og:image" content="https://clash-meta.github.io/uploads/20240803-1/fd589cd251aa70a08d8d1faa33d19ae2.webp" />
        <meta property="og:release_date" content="2025-04-22T08:23:05" />
    <meta property="og:updated_time" content="2025-04-22T08:23:05" />
        <meta property="og:description" content="本文对pymysql操作MySQL，insert和update的速度优化测试对比。对于insert操作来说，“一个事务处理多行的方式”比“一个事务处理一行的方式”插入相同的数据快了313倍，即插入20" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="access update语句执行_用pymysql实现对多行数据的insert和update加速">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="//fonts.googleapis.com/css2?family=Jost:wght@300;400;500&display=swap" rel="stylesheet">
    <link href="//fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/clash_meta/style-starter.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SJF0YS0LDW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SJF0YS0LDW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke px-0 pt-lg-0">
                                <a class="navbar-brand" href="/">
                    Clash Meta                </a>
                                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav mx-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--/header-->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb">
        <div class="breadcrumb-bg breadcrumb-bg-about py-5">
            <div class="container pt-lg-5 pt-md-3 p-lg-4 pb-md-3 my-lg-5">
                <h1 class="title pt-5">access update语句执行_用pymysql实现对多行数据的insert和update加速</h1>
                <ul class="breadcrumbs-custom-path mt-3 text-center">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 新闻资讯</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <section class="w3l-homeblock1">
        <div class="midd-w3 py-5">
            <div class="container py-lg-5 py-md-4 py-2">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="content_views" class="htmledit_views"> <div style="font-size:16px;"> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/03a32113307ed739253a304f95bfec95.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> </h1> <p>本文对pymysql操作MySQL，insert和update的速度优化测试对比。对于insert操作来说，“一个事务处理多行的方式”比“一个事务处理一行的方式”插入相同的数据快了313倍，即插入2000个记录，一个事务一行的方式需要30.99秒，优化方式仅需要0.099秒。MySQL原始语法是支持对insert语句一次插入多行记录，即insert into table_name values ，后面跟着多行值。</p> <p>但是对于update语句来说，MySQL并没有原始的语法支持一次update处理多行记录，update原始语句仅支持一次处理多个字段。本文将update语法和case when 语法结合起来，可以实现一个事务update更新多行记录，经测试这种方式比常规的方式快了283倍，即处理2000个记录，常规方式需要31.19秒，优化方式仅需要0.11秒。</p> </h1> <p>我们可以用Python封装一个MySQL连接的类，在类中实现对MySQL操作的类方法。</p> <p>例如，我们可以新建一个MySqlConnector的类，实现初始化类方法如下：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/fcc91815f58e05c310f8e37490f1480f.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>这个方法中，首先从mysql_config.ini配置文件中，加载MySQL的配置数据，如host、port、user、pwd、db_name等；然后利用pymysql包的连接方法，创建一个MySQL的连接。</p> <p>然后，我们定义MySqlConnector类的查询方法：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/31beb2be765a6c05deee95f18ac264cb.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>这个方法可以执行对mysql的查询操作。</p> <p>其次，我们再定义MySqlConnector类的update方法：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/0c2a4d6f290bca1340e42bdfd8432ff8.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>这个update方法，可以执行对mysql的插入、更新、删除操作。</p> <p>最后，定义MySqlConnector类的close方法：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/fcdef275b9bf22efe77e8d269431bdc8.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>对MySQL查询或者其他操作执行完毕之后，一定要执行该方法，关闭mysql的连接。因为单位时间里MySQL的连接数有最大的上限，当Mysql的连接数太多时，会造成MySQL的性能下，甚至会出现事务进程卡死的情况。</p> </h1> <p>我们先定义一个函数来计算某个函数的执行时间：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/75dd584766b423053a8b9cc32ba227dc.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>我们网上任意找2000个文字，来做这个优化对比测试：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/29c465133a18ce10993a39a4a4b0c74f.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>所以现在的任务是需要将这2000行的文本，插入mysql中。</p> <p><strong>1、我们先定义一种插入方式：一个事务插入一行数据的方式</strong></p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/17aab21a8e263f78b8ff7cb0e2c72970.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>执行看看需要多少时间：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/9cd92d7ab5215fcb1872b15755e658e6.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>我们得到，一个事务插入一行的方式，将2000个文本全部插入，需要30.99秒。</p> <p><strong>2、我们定义另一种方式：一个事务插入多行记录值</strong></p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/0bf8468e72878c204c0aac8d44cf35af.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>看看这种方式的执行时间：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/2091d024a343e148c4d90d8e1d6399c6.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>我们发现这种方式，插入2000行数据，仅需要0.099秒，比之前的方式，速度快了313倍。</p> </h1> <p>同样地，使用如上的2000行文本数据，现在需要根据 id 将mysql中的某个字段更新成这个2000行文本。</p> <p><strong>1、常规的方式是</strong></p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/68cf25f365f28a85f3b339175bdf5865.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>执行耗时：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/3d1465ed0fa716f1271667ee3d1f8370.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>这种一个事务更新一行记录的方式，处理2000行数据，需要耗时31.19秒。</p> <p><strong>2、能不能写成一个事务更新多行的方式</strong></p> <p>虽然MySQL原生语法，没有一次update更新多行记录的语法。但是，我们可以结合case when 语法，很优雅的实现这个需求。</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/61210e28fe36b2761746564aec06819f.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>执行时间：</p> <div class="pgc-img">   <img decoding="async" src="http://img.555519.xyz/uploads/20221230/9a766def8d3468eff01ccfd8d3107810.jpg" alt="access update语句执行_用pymysql实现对多行数据的insert和update加速"> </div> <p>发现，采用这种方式，更新2000行文本的时间，仅需要0.11秒，比常规方式加速了283倍。</p> </h1> <p>对于MySQL的insert和update的操作，尽可能的使用一个事务处理多行记录值的方式，这样可以大大提升对MySQL的操作性能。另外需要注意的时，当使用一个事务处理多行记录值时，可能会出现如下的报错信息："Got a packet bigger than 'max_allowed_packet' bytes"。</p> <p>一个事务处理多行虽好，但是事务处理多行也是有最大上限的。当出现这个报错信息时，需要将数据分成几个batch，然后每个batch来使用一个事务处理多行的方式即可。</p> </div></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-100743.htm">狗狗领养平台推荐哪个（狗狗领养app平台免费）</a></p>
                                        <p>下一个：<a href="/news/article-101409.htm">kafka系列SpringBoot 中使用@KafkaListener详解与使用</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-93920.htm" title="开一家宠物店的市场前景（开一家宠物店的市场前景如何）">开一家宠物店的市场前景（开一家宠物店的市场前景如何）</a></li>
                        <li class="py-2"><a href="/news/article-94833.htm" title="ansible容器学习环境搭建教程">ansible容器学习环境搭建教程</a></li>
                        <li class="py-2"><a href="/news/article-96316.htm" title="PHP回调/可调用对象详解">PHP回调/可调用对象详解</a></li>
                        <li class="py-2"><a href="/news/article-68917.htm" title="鱼饲料颗粒机多少钱一台小型的（颗粒机鱼饲料配方）">鱼饲料颗粒机多少钱一台小型的（颗粒机鱼饲料配方）</a></li>
                        <li class="py-2"><a href="/news/article-92550.htm" title="MySQL日期和时间数据类型（DATE、TIME、 DATETIME、 TIMESTAMP和YEAR）">MySQL日期和时间数据类型（DATE、TIME、 DATETIME、 TIMESTAMP和YEAR）</a></li>
                        <li class="py-2"><a href="/news/article-81659.htm" title="初探webpack之编写loader_在线工具">初探webpack之编写loader_在线工具</a></li>
                        <li class="py-2"><a href="/news/article-83114.htm" title="动物打疫苗后的不良反应是什么症状表现（动物打疫苗后的不良反应是什么症状表现图片）">动物打疫苗后的不良反应是什么症状表现（动物打疫苗后的不良反应是什么症状表现图片）</a></li>
                        <li class="py-2"><a href="/news/article-100743.htm" title="狗狗领养平台推荐哪个（狗狗领养app平台免费）">狗狗领养平台推荐哪个（狗狗领养app平台免费）</a></li>
                        <li class="py-2"><a href="/news/article-102178.htm" title="上海宠物医院24小时电话多少（上海宠物医院24小时电话多少啊）">上海宠物医院24小时电话多少（上海宠物医院24小时电话多少啊）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-19-latest-clash-meta-node.htm" title="3月19日 | Clash Meta每天更新19.4M/S免费节点订阅链接地址">3月19日 | Clash Meta每天更新19.4M/S免费节点订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">70</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
        <!-- footer -->
    <section class="w3l-footer-29-main">
        <!-- copyright -->
        <section class="w3l-copyright text-center">
            <div class="container">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                <p class="copy-footer-29">
                Clash Meta免费节点订阅站 版权所有 Powered by WordPress
                </p>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                &#10548;
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- /move top -->
        </section>
        <!-- //copyright -->
    </section>
    <!-- //footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/clash_meta/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/clash_meta/jquery-3.5.1.min.js"></script><!-- default jQuery -->
    <script src="/assets/website/js/frontend/clash_meta/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/clash_meta/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>